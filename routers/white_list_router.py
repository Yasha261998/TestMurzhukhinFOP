from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from .command_router import show_whitelist_menu, UserState
from shared.funcs import extract_domain, save_users, users


white_list_router = Router()

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ–º–µ–Ω—ñ–≤ –¥–æ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
@white_list_router.message(lambda message: message.text == "–î–æ–¥–∞—Ç–∏ –¥–æ–º–µ–Ω")
async def request_domain(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user_data = users.get(user_id, {})
    user_domains = user_data.get('whitelist', [])

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_data.get('status') == 'demo':
        return await message.answer("‚ùå –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ —É –ø–ª–∞—Ç–Ω—ñ–π –≤–µ—Ä—Å—ñ—ó –±–æ—Ç—É.")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–æ—Å—è–≥ –ª—ñ–º—ñ—Ç—É –Ω–∞ 3 –¥–æ–º–µ–Ω–∏
    if user_data.get('status') != 'admin' and len(user_domains) >= 3:
        return await message.answer("‚ùå –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à–µ 3-—Ö –¥–æ–º–µ–Ω—ñ–≤.")

    await message.answer("üì© –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç, –¥–æ–º–µ–Ω —è–∫–æ–≥–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏.", reply_markup=ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton(text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥")],
                ],
                resize_keyboard=True,
                one_time_keyboard=True
            ))
    await state.set_state(UserState.waiting_for_domain)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω—ñ–≤"
@white_list_router.message(lambda message: message.text == "–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω—ñ–≤")
async def list_domains(message: Message, state: FSMContext, user_id=None):
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = user_id or message.from_user.id
    user_domains = users.get(user_id, {}).get('whitelist', [])

    await state.set_state(UserState.domain_list)

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    domain_buttons = [[KeyboardButton(text=domain)] for domain in user_domains]
    domain_buttons.append([KeyboardButton(text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥")])

    domain_keyboard = ReplyKeyboardMarkup(
        keyboard=domain_buttons,
        resize_keyboard=True,
        one_time_keyboard=True
    )

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–æ–º–µ–Ω—ñ–≤
    if not user_domains:
        await message.answer(text="üìã –í–∞—à –≤–∞–π—Ç–ª–∏—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π.", reply_markup=domain_keyboard)
    else:
        await message.answer(text="–í–∏–±–µ—Ä—ñ—Ç—å –¥–æ–º–µ–Ω, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏:", reply_markup=domain_keyboard)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –¥–æ–º–µ–Ω –≤ –≤–∞–π—Ç–ª–∏—Å—Ç—ñ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
@white_list_router.message(lambda message: message.text in [domain for domain in users.get(message.from_user.id, {}).get('whitelist', [])])
async def delete_domain(message: Message):
    user_id = message.from_user.id
    domain_to_remove = message.text

    # –í–∏–¥–∞–ª—è—î–º–æ –¥–æ–º–µ–Ω –∑ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
    if domain_to_remove in users[user_id].get('whitelist', []):
        users[user_id]['whitelist'].remove(domain_to_remove)
        save_users(users)
        await message.answer(f"‚úÖ –î–æ–º–µ–Ω {domain_to_remove} –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –≤–∞–π—Ç–ª–∏—Å—Ç–∞.")
    else:
        await message.answer("‚ùå –î–æ–º–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –≤–∞—à–æ–º—É –≤–∞–π—Ç–ª–∏—Å—Ç—ñ.")

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ —Å–ø–∏—Å–∫—É –¥–æ–º–µ–Ω—ñ–≤
    await list_domains(message)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ –¥–æ–º–µ–Ω"
@white_list_router.message(UserState.waiting_for_domain)
async def add_domain(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user_domain = message.text

    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ–º–µ–Ω –∑ URL
    domain = extract_domain(user_domain)

    # –î–æ–¥–∞—î–º–æ –¥–æ–º–µ–Ω –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    users[user_id]['whitelist'] = users[user_id].get('whitelist', [])
    if domain not in users[user_id]['whitelist']:
        users[user_id]['whitelist'].append(domain)
        save_users(users)  # –ó–±–µ—Ä–µ–≥—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        await message.answer(f"‚úÖ –î–æ–º–µ–Ω {domain} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞–π—Ç–ª–∏—Å—Ç–∞.")
    else:
        await message.answer("‚ùå –¶–µ–π –¥–æ–º–µ–Ω –≤–∂–µ –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞–π—Ç–ª–∏—Å—Ç–∞.")

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –º–µ–Ω—é –≤–∞–π—Ç–ª–∏—Å—Ç–∞
    await show_whitelist_menu(message, state)
